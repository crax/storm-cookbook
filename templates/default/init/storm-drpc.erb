#!/bin/sh
### BEGIN INIT INFO
# Provides:          storm-drpc
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts up an instance of Storm's Distributed RPC Server
# Description:       This file should be used to start and stop storm-drpc.
### END INIT INFO

# Author: Maximilian Goisser <goisser94@gmail.com>
# Based on the haproxy script by: Arnaud Cornet <acornet@debian.org>

# This file is managed by Chef any changes made will be overwritten

<%= render "env/storm.erb", :variables => { :user => @user, :storm_home => @storm_home, :java_lib_path => @java_lib_path } %>
PIDFILE=/var/run/storm-drpc.pid

[ -f /etc/default/rcS ] && . /etc/default/rcS
. /lib/lsb/init-functions

storm_drpc_start()
{
  start-stop-daemon --start --user <%= @user %> --pidfile "$PIDFILE" --make-pidfile --background \
    --exec /usr/bin/python $STORM_HOME/bin/storm drpc \
    || return 2
  return 0
}

storm_drpc_stop()
{
  if [ ! -f $PIDFILE ] ; then
    # This is a success according to LSB
    return 0
  fi
  for pid in $(cat $PIDFILE) ; do
    /bin/kill $pid || return 4
  done
  rm -f $PIDFILE
  return 0
}

storm_drpc_status()
{
  if [ ! -f $PIDFILE ] ; then
    # program not running
    return 3
  fi

  for pid in $(cat $PIDFILE) ; do
    if ! ps --no-headers p "$pid" | grep drpc > /dev/null ; then
      # program running, bogus pidfile
      return 1
    fi
  done

  return 0
}


case "$1" in
start)
  log_daemon_msg "Starting storm-drpc" "storm-drpc"
  storm_drpc_start
  ret=$?
  case "$ret" in
  0)
    log_end_msg 0
    ;;
  1)
    log_end_msg 1
    echo "pid file '$PIDFILE' found, storm-drpc not started."
    ;;
  2)
    log_end_msg 1
    ;;
  esac
  exit $ret
  ;;
stop)
  log_daemon_msg "Stopping storm-drpc" "storm-drpc"
  storm_drpc_stop
  ret=$?
  case "$ret" in
  0|1)
    log_end_msg 0
    ;;
  2)
    log_end_msg 1
    ;;
  esac
  exit $ret
  ;;
restart)
  log_daemon_msg "Restarting storm-drpc" "storm-drpc"
  storm_drpc_stop
  storm_drpc_start
  case "$?" in
  0)
    log_end_msg 0
    ;;
  1)
    log_end_msg 1
    ;;
  2)
    log_end_msg 1
    ;;
  esac
  ;;
status)
  storm_drpc_status
  ret=$?
  case "$ret" in
  0)
    echo "storm-drpc is running."
    ;;
  1)
    echo "storm-drpc dead, but $PIDFILE exists."
    ;;
  *)
    echo "storm-drpc not running."
    ;;
  esac
  exit $ret
  ;;
*)
  echo "Usage: /etc/init.d/storm-drpc {start|stop|restart|status}"
  exit 2
  ;;
esac

:
